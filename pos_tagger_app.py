import streamlit as st
import pandas as pd
import joblib
import re

# –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–µ–≥–æ–≤
POS_COLORS = {
    'NOUN': '#ffcccb',
    'VERB': '#c3f7c3',
    'ADJ': '#add8e6',
    'ADV': '#f9d9f9',
    'PROPN': '#ffd700',
    'PUNCT': '#eeeeee',
    'NUM': '#ffe4b5',
    'ADP': '#e6e6fa',
    'PRON': '#d3ffce',
    'CONJ': '#c1e1c1',
    'PART': '#f4cccc',
    'X': '#dddddd'
}

# –¢–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è
def tokenize_text(text):
    return re.findall(r'\w+|[^\w\s]', text, re.UNICODE)

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞
@st.cache_resource
def load_model():
    clf = joblib.load("pos_tagging_model.pkl")
    vectorizer = joblib.load("vectorizer.pkl")
    return clf, vectorizer

# –†–∞–∑–º–µ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
def tag_text(clf, vectorizer, sentence):
    tokens = tokenize_text(sentence)
    vectors = vectorizer.transform(tokens)
    tags = clf.predict(vectors)
    return pd.DataFrame({'Token': tokens, 'POS': tags})


# –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
def main():
    st.title("üìö POS-—Ç–µ–≥–≥–µ—Ä (–ö—ã—Ä–≥—ã–∑ —Ç–∏–ª–∏)")

    sentence = st.text_area("–¢–µ–∫—Å—Ç –∫–∏—Ä–≥–∏–∑–∏“£–∏–∑:", "–ú—É–≥–∞–ª–∏–º —Å–∞–±–∞–∫ –±–µ—Ä–¥–∏.")

    if st.button("–ê–Ω–∞–ª–∏–∑ –∫—ã–ª—É—É"):
        clf, vectorizer = load_model()
        df = tag_text(clf, vectorizer, sentence)

        # –¶–≤–µ—Ç–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞
        def highlight_row(row):
            color = POS_COLORS.get(row['POS'], '#ffffff')
            return [f'background-color: {color}'] * len(row)

        st.subheader("üìä –ù–∞—Ç—ã–π–∂–∞ —Ç–∞–±–ª–∏—Ü–∞ —Ç“Ø—Ä“Ø–Ω–¥”©:")
        st.dataframe(df.style.apply(highlight_row, axis=1), use_container_width=True)

        # –°–∫–∞—á–∞—Ç—å –∫–∞–∫ CSV
        csv = df.to_csv(index=False).encode('utf-8')
        st.download_button("‚¨áÔ∏è CSV —Ç“Ø—Ä“Ø–Ω–¥”© –∂“Ø–∫—Ç”©”©", data=csv, file_name="tagged_output.csv", mime='text/csv')


if __name__ == "__main__":
    main()
